document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");
  if (!token) {
    alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc!");
    window.location.href = "index.html";
  }

  const menuItems = document.querySelectorAll(".menu-item");
  const introText = document.querySelector(".intro-text");
  const cakeList = document.getElementById("cakeList");
  const formContainer = document.getElementById("formContainer");
  const logoutBtn = document.getElementById("logoutBtn");

  // ======================
  // H√ÄM FETCH D·ªÆ LI·ªÜU CHUNG
  // ======================
  async function fetchJSON(url, options = {}) {
    try {
      const res = await fetch(url, options);
      const data = await res.json();

      if (!res.ok || data.success === false) {
        throw new Error(data.message || "L·ªói API");
      }

      return data;
    } catch (err) {
      console.error("‚ùå Fetch error:", err);
      throw err;
    }
  }

  // ======================
  // X·ª¨ L√ù MENU
  // ======================
  menuItems.forEach((item) => {
    item.addEventListener("click", async (e) => {
      e.preventDefault();
      const action = item.dataset.action;

      introText.textContent = "";
      cakeList.innerHTML = "";
      formContainer.innerHTML = "";

      try {
        switch (action) {
          case "all":
            await showAllCakes();
            break;
          case "my":
            await showMyCakes();
            break;
          case "categories":
            await showCategories();
            break;
          case "search":
            showSearchForm();
            break;
          case "create":
            await showCreateForm();
            break;
          case "update":
            showUpdateForm();
            break;
          case "delete":
            showDeleteForm();
            break;
          default:
            introText.textContent = "‚ö†Ô∏è Ch·ª©c nƒÉng ch∆∞a ƒë∆∞·ª£c h·ªó tr·ª£!";
        }
      } catch (err) {
        introText.textContent = "‚ùå " + err.message;
      }
    });
  });

  // ======================
  // HI·ªÇN TH·ªä C√ÅC TH·∫∫ B√ÅNH
  // ======================
  function renderCakes(cakes) {
    if (!cakes || cakes.length === 0) {
      cakeList.innerHTML = "<p>Kh√¥ng c√≥ b√°nh n√†o ƒë·ªÉ hi·ªÉn th·ªã!</p>";
      return;
    }

    cakeList.innerHTML = cakes
      .map(
        (cake) => `
        <div class="cake-card">
          <img src="${cake.image || "https://via.placeholder.com/300x200"}" alt="${cake.name}" />
          <h3>${cake.name}</h3>
          <p>${cake.description || "Kh√¥ng c√≥ m√¥ t·∫£."}</p>
          <p class="cake-price">üí∞ ${cake.price ? cake.price.toLocaleString() : "?"}‚Ç´</p>
          <p class="cake-author">üë§ ${cake.author || "·∫®n danh"}</p>
        </div>`
      )
      .join("");
  }

  // ======================
  // HI·ªÇN TH·ªä T·∫§T C·∫¢ B√ÅNH
  // ======================
  async function showAllCakes() {
    introText.textContent = "üìã Danh s√°ch t·∫•t c·∫£ b√°nh:";
    const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes");
    renderCakes(data.data);
  }

  // ======================
  // HI·ªÇN TH·ªä B√ÅNH C·ª¶A USER
  // ======================
  async function showMyCakes() {
    introText.textContent = "üßÅ Danh s√°ch b√°nh c·ªßa b·∫°n:";
    const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes/my", {
      headers: { Authorization: `Bearer ${token}` },
    });
    renderCakes(data.data);
  }

  // ======================
  // DANH M·ª§C B√ÅNH
  // ======================
  async function showCategories() {
    introText.textContent = "üìÇ Danh m·ª•c b√°nh:";
    const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes/categories/list");

    const categories = data.data;
    cakeList.innerHTML = categories
      .map(
        (cat) => `
        <div class="cake-card">
          <h3>üç∞ ${cat.category}</h3>
          <p>S·ªë l∆∞·ª£ng: ${cat.count}</p>
        </div>`
      )
      .join("");
  }

  // ======================
  // T√åM KI·∫æM B√ÅNH (ƒê√É S·ª¨A)
  // ======================
  function showSearchForm() {
  introText.textContent = "üîç T√¨m ki·∫øm b√°nh (theo t√™n, lo·∫°i ho·∫∑c m√¥ t·∫£):";
  formContainer.innerHTML = `
    <div class="form-card">
      <label>T·ª´ kh√≥a:</label>
      <input id="searchKey" placeholder="Nh·∫≠p t√™n, lo·∫°i b√°nh ho·∫∑c m√¥ t·∫£..." />
      <button id="searchBtn">T√¨m ki·∫øm</button>
    </div>
  `;

  document.getElementById("searchBtn").addEventListener("click", async () => {
    const key = document.getElementById("searchKey").value.trim();
    if (!key) {
      alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p t·ª´ kh√≥a c·∫ßn t√¨m!");
      return;
    }

    try {
      // G·ª≠i y√™u c·∫ßu ƒë·∫øn API
      const data = await fetchJSON(`https://banhngot.fitlhu.com/api/cakes/search?q=${encodeURIComponent(key)}`);

      // Ki·ªÉm tra k·∫øt qu·∫£
      if (!Array.isArray(data.data) || data.data.length === 0) {
        introText.textContent = "üîé Kh√¥ng t√¨m th·∫•y b√°nh n√†o ph√π h·ª£p!";
        cakeList.innerHTML = "<p>Kh√¥ng c√≥ k·∫øt qu·∫£ hi·ªÉn th·ªã.</p>";
        return;
      }

      introText.textContent = `üîé K·∫øt qu·∫£ t√¨m ki·∫øm (${data.data.length} b√°nh):`;
      renderCakes(data.data);

    } catch (err) {
      alert("‚ùå L·ªói khi t√¨m ki·∫øm: " + err.message);
    }
  });
}

  // ======================
  // T·∫†O B√ÅNH M·ªöI
  // ======================
  async function showCreateForm() {
    introText.textContent = "‚ûï T·∫°o b√°nh m·ªõi:";
    let catList = [];

    try {
      const catData = await fetchJSON("https://banhngot.fitlhu.com/api/cakes/categories/list");
      catList = Array.isArray(catData.data) ? catData.data : Object.values(catData.data);
    } catch {
      catList = [];
    }

    const options = catList
      .map(
        (cat) =>
          `<option value="${cat.category || cat.name || Object.values(cat)[0]}">
            ${cat.category || cat.name || Object.values(cat)[0]}
          </option>`
      )
      .join("");

    formContainer.innerHTML = `
      <div class="form-card">
        <label>T√™n b√°nh:</label>
        <input id="cakeName" placeholder="T√™n b√°nh..." />

        <label>Lo·∫°i b√°nh:</label>
        <select id="cakeCategory">
          <option value="">-- Ch·ªçn lo·∫°i b√°nh --</option>
          ${options}
        </select>

        <label>M√¥ t·∫£:</label>
        <textarea id="cakeDesc" placeholder="M√¥ t·∫£ ng·∫Øn..."></textarea>

        <label>·∫¢nh:</label>
        <input id="cakeImage" placeholder="https://..." />

        <label>Gi√° (VNƒê):</label>
        <input id="cakePrice" type="number" placeholder="Gi√°..." />

        <button id="createBtn">T·∫°o b√°nh</button>
      </div>
    `;

    document.getElementById("createBtn").addEventListener("click", async () => {
      const name = document.getElementById("cakeName").value.trim();
      const category = document.getElementById("cakeCategory").value.trim();
      const description = document.getElementById("cakeDesc").value.trim();
      const image = document.getElementById("cakeImage").value.trim();
      const price = Number(document.getElementById("cakePrice").value.trim());

      if (!name || !category || !price) {
        alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªß t√™n, lo·∫°i b√°nh v√† gi√° ti·ªÅn!");
        return;
      }

      const payload = { name, category, description, image, price };
      const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: "Bearer " + token,
        },
        body: JSON.stringify(payload),
      });

      alert(data.message || "üéâ T·∫°o b√°nh th√†nh c√¥ng!");
      await showMyCakes();
    });
  }

  // ======================
  // C·∫¨P NH·∫¨T B√ÅNH
  // ======================
  function showUpdateForm() {
    introText.textContent = "‚úèÔ∏è C·∫≠p nh·∫≠t b√°nh:";
    formContainer.innerHTML = `
      <div class="form-card">
        <label>ID b√°nh:</label>
        <input id="cakeId" placeholder="Nh·∫≠p ID b√°nh..." />

        <label>T√™n m·ªõi (t√πy ch·ªçn):</label>
        <input id="newName" placeholder="T√™n m·ªõi..." />

        <label>Gi√° m·ªõi (t√πy ch·ªçn):</label>
        <input id="newPrice" type="number" placeholder="Gi√° m·ªõi..." />

        <label>M√¥ t·∫£ (t√πy ch·ªçn):</label>
        <textarea id="newDesc" placeholder="M√¥ t·∫£ m·ªõi..."></textarea>

        <button id="updateBtn">C·∫≠p nh·∫≠t</button>
      </div>
    `;

    document.getElementById("updateBtn").addEventListener("click", async () => {
      const id = document.getElementById("cakeId").value.trim();
      if (!id) return alert("‚ö†Ô∏è Nh·∫≠p ID b√°nh!");

      const name = document.getElementById("newName").value.trim();
      const desc = document.getElementById("newDesc").value.trim();
      const priceVal = document.getElementById("newPrice").value.trim();

      const payload = {};
      if (name) payload.name = name;
      if (desc) payload.description = desc;
      if (priceVal) payload.price = Number(priceVal);

      const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes/" + id, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
          Authorization: "Bearer " + token,
        },
        body: JSON.stringify(payload),
      });

      alert(data.message || "üéâ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
      await showMyCakes();
    });
  }

  // ======================
  // X√ìA B√ÅNH
  // ======================
  function showDeleteForm() {
    introText.textContent = "üóëÔ∏è X√≥a b√°nh:";
    formContainer.innerHTML = `
      <div class="form-card">
        <label>ID b√°nh:</label>
        <input id="deleteId" placeholder="Nh·∫≠p ID b√°nh..." />
        <button id="deleteBtn">X√≥a b√°nh</button>
      </div>
    `;

    document.getElementById("deleteBtn").addEventListener("click", async () => {
      const id = document.getElementById("deleteId").value.trim();
      if (!id) return alert("‚ö†Ô∏è Nh·∫≠p ID b√°nh!");
      if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√°nh n√†y?")) return;

      const data = await fetchJSON("https://banhngot.fitlhu.com/api/cakes/" + id, {
        method: "DELETE",
        headers: { Authorization: "Bearer " + token },
      });

      alert(data.message || "üéâ ƒê√£ x√≥a th√†nh c√¥ng!");
      await showMyCakes();
    });
  }

  // ======================
  // ƒêƒÇNG XU·∫§T
  // ======================
  logoutBtn.addEventListener("click", () => {
    localStorage.clear();
    alert("ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
    window.location.href = "index.html";
  });
});
